<svg width="1200" height="1600" viewBox="0 0 1200 1600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <!-- Gradients -->
    <linearGradient id="neuronGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#667eea;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#764ba2;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="inputGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#48bb78;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#38a169;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="outputGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#ed8936;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#dd6b20;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="bgGrad" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#f7fafc;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#edf2f7;stop-opacity:1" />
    </linearGradient>
    
    <!-- Arrow marker -->
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="0" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#667eea" />
    </marker>
    
    <!-- Drop shadow filter -->
    <filter id="dropshadow" x="-50%" y="-50%" width="200%" height="200%">
      <feDropShadow dx="3" dy="3" stdDeviation="3" flood-color="#000" flood-opacity="0.2"/>
    </filter>
  </defs>
  
  <!-- Background -->
  <rect width="1200" height="1600" fill="url(#bgGrad)" />
  
  <!-- Title Section -->
  <rect x="50" y="30" width="1100" height="80" fill="white" rx="15" filter="url(#dropshadow)" />
  <text x="600" y="60" text-anchor="middle" font-family="Arial, sans-serif" font-size="28" font-weight="bold" fill="#2d3748">Neural Network Components</text>
  <text x="600" y="85" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" fill="#4a5568">Complete Visual Guide to Deep Learning Architecture</text>
  
  <!-- Section 1: Network Architecture -->
  <rect x="50" y="140" width="1100" height="280" fill="white" rx="15" filter="url(#dropshadow)" />
  <text x="70" y="170" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="#2d3748">1. Network Architecture</text>
  
  <!-- Main Network Diagram -->
  <g transform="translate(100, 190)">
    <!-- Input Layer -->
    <circle cx="50" cy="80" r="18" fill="url(#inputGrad)" stroke="#38a169" stroke-width="2" />
    <circle cx="50" cy="130" r="18" fill="url(#inputGrad)" stroke="#38a169" stroke-width="2" />
    <circle cx="50" cy="180" r="18" fill="url(#inputGrad)" stroke="#38a169" stroke-width="2" />
    
    <!-- Hidden Layer 1 -->
    <circle cx="200" cy="60" r="18" fill="url(#neuronGrad)" stroke="#4c51bf" stroke-width="2" />
    <circle cx="200" cy="100" r="18" fill="url(#neuronGrad)" stroke="#4c51bf" stroke-width="2" />
    <circle cx="200" cy="140" r="18" fill="url(#neuronGrad)" stroke="#4c51bf" stroke-width="2" />
    <circle cx="200" cy="180" r="18" fill="url(#neuronGrad)" stroke="#4c51bf" stroke-width="2" />
    <circle cx="200" cy="220" r="18" fill="url(#neuronGrad)" stroke="#4c51bf" stroke-width="2" />
    
    <!-- Hidden Layer 2 -->
    <circle cx="350" cy="80" r="18" fill="url(#neuronGrad)" stroke="#4c51bf" stroke-width="2" />
    <circle cx="350" cy="120" r="18" fill="url(#neuronGrad)" stroke="#4c51bf" stroke-width="2" />
    <circle cx="350" cy="160" r="18" fill="url(#neuronGrad)" stroke="#4c51bf" stroke-width="2" />
    <circle cx="350" cy="200" r="18" fill="url(#neuronGrad)" stroke="#4c51bf" stroke-width="2" />
    
    <!-- Output Layer -->
    <circle cx="500" cy="115" r="18" fill="url(#outputGrad)" stroke="#dd6b20" stroke-width="2" />
    <circle cx="500" cy="165" r="18" fill="url(#outputGrad)" stroke="#dd6b20" stroke-width="2" />
    
    <!-- Connections (selective for clarity) -->
    <line x1="68" y1="80" x2="182" y2="60" stroke="#a0aec0" stroke-width="2" opacity="0.6" />
    <line x1="68" y1="130" x2="182" y2="100" stroke="#667eea" stroke-width="3" opacity="0.8" />
    <line x1="68" y1="180" x2="182" y2="140" stroke="#a0aec0" stroke-width="2" opacity="0.6" />
    
    <line x1="218" y1="100" x2="332" y2="80" stroke="#a0aec0" stroke-width="2" opacity="0.6" />
    <line x1="218" y1="140" x2="332" y2="120" stroke="#667eea" stroke-width="3" opacity="0.8" />
    <line x1="218" y1="180" x2="332" y2="160" stroke="#a0aec0" stroke-width="2" opacity="0.6" />
    
    <line x1="368" y1="120" x2="482" y2="115" stroke="#667eea" stroke-width="3" opacity="0.8" />
    <line x1="368" y1="160" x2="482" y2="165" stroke="#667eea" stroke-width="3" opacity="0.8" />
    
    <!-- Layer Labels -->
    <text x="50" y="250" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2d3748">Input Layer</text>
    <text x="200" y="250" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2d3748">Hidden Layer 1</text>
    <text x="350" y="250" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2d3748">Hidden Layer 2</text>
    <text x="500" y="250" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2d3748">Output Layer</text>
    
    <!-- Data flow arrows -->
    <line x1="125" y1="40" x2="175" y2="40" stroke="#667eea" stroke-width="3" marker-end="url(#arrowhead)" />
    <line x1="275" y1="40" x2="325" y2="40" stroke="#667eea" stroke-width="3" marker-end="url(#arrowhead)" />
    <line x1="425" y1="40" x2="475" y2="40" stroke="#667eea" stroke-width="3" marker-end="url(#arrowhead)" />
    <text x="300" y="30" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">Forward Propagation</text>
  </g>
  
  <!-- Key Architecture Points -->
  <text x="620" y="210" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2d3748">Key Principles:</text>
  <text x="630" y="230" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">• Information flows left to right</text>
  <text x="630" y="250" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">• Each layer transforms data</text>
  <text x="630" y="270" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">• Complexity builds hierarchically</text>
  <text x="630" y="290" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">• Fully connected layers</text>
  
  <!-- Section 2: Neuron Details -->
  <rect x="50" y="450" width="550" height="280" fill="white" rx="15" filter="url(#dropshadow)" />
  <text x="70" y="480" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="#2d3748">2. Neuron Operation</text>
  
  <!-- Detailed Neuron Diagram -->
  <g transform="translate(100, 500)">
    <!-- Input values -->
    <circle cx="50" cy="60" r="12" fill="#48bb78" />
    <circle cx="50" cy="100" r="12" fill="#48bb78" />
    <circle cx="50" cy="140" r="12" fill="#48bb78" />
    
    <text x="30" y="65" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="#2d3748">x₁</text>
    <text x="30" y="105" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="#2d3748">x₂</text>
    <text x="30" y="145" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="#2d3748">x₃</text>
    
    <!-- Connections with weights -->
    <line x1="62" y1="60" x2="158" y2="90" stroke="#667eea" stroke-width="3" />
    <line x1="62" y1="100" x2="158" y2="100" stroke="#667eea" stroke-width="3" />
    <line x1="62" y1="140" x2="158" y2="110" stroke="#667eea" stroke-width="3" />
    
    <!-- Weight labels -->
    <text x="105" y="70" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#4a5568">w₁</text>
    <text x="105" y="105" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#4a5568">w₂</text>
    <text x="105" y="125" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#4a5568">w₃</text>
    
    <!-- Main neuron -->
    <circle cx="200" cy="100" r="30" fill="url(#neuronGrad)" stroke="#4c51bf" stroke-width="3" />
    
    <!-- Neuron operations -->
    <text x="200" y="90" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="white">Σ</text>
    <text x="200" y="105" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">+b</text>
    <text x="200" y="118" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">f()</text>
    
    <!-- Bias -->
    <line x1="200" y1="50" x2="200" y2="70" stroke="#a0aec0" stroke-width="2" />
    <text x="200" y="45" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#4a5568">bias</text>
    
    <!-- Output -->
    <line x1="230" y1="100" x2="280" y2="100" stroke="#667eea" stroke-width="3" marker-end="url(#arrowhead)" />
    <text x="300" y="105" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">output</text>
    
    <!-- Formula -->
    <text x="200" y="180" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#2d3748">output = f(w₁x₁ + w₂x₂ + w₃x₃ + b)</text>
  </g>
  
  <!-- Neuron Steps -->
  <text x="370" y="520" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2d3748">Processing Steps:</text>
  <text x="380" y="540" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">1. Weighted Sum</text>
  <text x="380" y="560" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">2. Add Bias</text>
  <text x="380" y="580" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">3. Apply Activation</text>
  <text x="380" y="600" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">4. Pass to Next Layer</text>
  
  <!-- Section 3: Weights Visualization -->
  <rect x="630" y="450" width="520" height="280" fill="white" rx="15" filter="url(#dropshadow)" />
  <text x="650" y="480" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="#2d3748">3. Weights &amp; Connections</text>
  
  <!-- Weight strength visualization -->
  <g transform="translate(680, 510)">
    <!-- Strong positive -->
    <line x1="0" y1="30" x2="80" y2="30" stroke="#48bb78" stroke-width="8" />
    <text x="90" y="35" font-family="Arial, sans-serif" font-size="11" fill="#48bb78">+2.5 Strong Positive</text>
    
    <!-- Weak positive -->
    <line x1="0" y1="50" x2="80" y2="50" stroke="#68d391" stroke-width="3" />
    <text x="90" y="55" font-family="Arial, sans-serif" font-size="11" fill="#68d391">+0.3 Weak Positive</text>
    
    <!-- Weak negative -->
    <line x1="0" y1="70" x2="80" y2="70" stroke="#fc8181" stroke-width="3" />
    <text x="90" y="75" font-family="Arial, sans-serif" font-size="11" fill="#fc8181">-0.4 Weak Negative</text>
    
    <!-- Strong negative -->
    <line x1="0" y1="90" x2="80" y2="90" stroke="#e53e3e" stroke-width="8" />
    <text x="90" y="95" font-family="Arial, sans-serif" font-size="11" fill="#e53e3e">-2.1 Strong Negative</text>
    
    <!-- Weight matrix representation -->
    <rect x="250" y="20" width="120" height="80" fill="none" stroke="#4a5568" stroke-width="2" />
    <text x="310" y="15" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#2d3748">Weight Matrix</text>
    
    <!-- Matrix cells with different colors representing weight values -->
    <rect x="260" y="30" width="20" height="15" fill="#48bb78" opacity="0.7" />
    <rect x="285" y="30" width="20" height="15" fill="#fc8181" opacity="0.7" />
    <rect x="310" y="30" width="20" height="15" fill="#68d391" opacity="0.7" />
    <rect x="335" y="30" width="20" height="15" fill="#e53e3e" opacity="0.7" />
    
    <rect x="260" y="50" width="20" height="15" fill="#fc8181" opacity="0.7" />
    <rect x="285" y="50" width="20" height="15" fill="#48bb78" opacity="0.7" />
    <rect x="310" y="50" width="20" height="15" fill="#e53e3e" opacity="0.7" />
    <rect x="335" y="50" width="20" height="15" fill="#68d391" opacity="0.7" />
    
    <rect x="260" y="70" width="20" height="15" fill="#68d391" opacity="0.7" />
    <rect x="285" y="70" width="20" height="15" fill="#e53e3e" opacity="0.7" />
    <rect x="310" y="70" width="20" height="15" fill="#48bb78" opacity="0.7" />
    <rect x="335" y="70" width="20" height="15" fill="#fc8181" opacity="0.7" />
    
    <text x="310" y="115" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#4a5568">Each cell = connection weight</text>
  </g>
  
  <!-- Weight learning info -->
  <text x="650" y="650" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">• Weights encode network knowledge</text>
  <text x="650" y="670" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">• Learned through backpropagation</text>
  <text x="650" y="690" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">• Determine feature importance</text>
  
  <!-- Section 4: Activation Functions -->
  <rect x="50" y="760" width="1100" height="250" fill="white" rx="15" filter="url(#dropshadow)" />
  <text x="70" y="790" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="#2d3748">4. Activation Functions</text>
  
  <!-- ReLU Function -->
  <g transform="translate(100, 820)">
    <text x="60" y="15" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2d3748">ReLU</text>
    <!-- Axes -->
    <line x1="10" y1="80" x2="110" y2="80" stroke="#4a5568" stroke-width="2" />
    <line x1="60" y1="20" x2="60" y2="120" stroke="#4a5568" stroke-width="2" />
    <!-- ReLU curve -->
    <path d="M 10 80 L 60 80 L 110 30" stroke="#48bb78" stroke-width="3" fill="none" />
    <text x="60" y="140" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#4a5568">f(x) = max(0, x)</text>
  </g>
  
  <!-- Sigmoid Function -->
  <g transform="translate(300, 820)">
    <text x="60" y="15" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2d3748">Sigmoid</text>
    <!-- Axes -->
    <line x1="10" y1="80" x2="110" y2="80" stroke="#4a5568" stroke-width="2" />
    <line x1="60" y1="20" x2="60" y2="120" stroke="#4a5568" stroke-width="2" />
    <!-- Sigmoid curve -->
    <path d="M 15 110 Q 35 95 60 80 Q 85 65 105 50" stroke="#667eea" stroke-width="3" fill="none" />
    <text x="60" y="140" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#4a5568">f(x) = 1/(1+e^(-x))</text>
  </g>
  
  <!-- Tanh Function -->
  <g transform="translate(500, 820)">
    <text x="60" y="15" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2d3748">Tanh</text>
    <!-- Axes -->
    <line x1="10" y1="80" x2="110" y2="80" stroke="#4a5568" stroke-width="2" />
    <line x1="60" y1="20" x2="60" y2="120" stroke="#4a5568" stroke-width="2" />
    <!-- Tanh curve -->
    <path d="M 15 95 Q 35 85 60 80 Q 85 75 105 65" stroke="#ed8936" stroke-width="3" fill="none" />
    <text x="60" y="140" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#4a5568">f(x) = tanh(x)</text>
  </g>
  
  <!-- Activation function properties -->
  <text x="720" y="840" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2d3748">Properties:</text>
  <text x="730" y="860" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">• ReLU: Fast, prevents vanishing gradients</text>
  <text x="730" y="880" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">• Sigmoid: Outputs 0-1, good for binary</text>
  <text x="730" y="900" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">• Tanh: Outputs -1 to 1, zero-centered</text>
  <text x="730" y="920" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">• Non-linearity enables complex learning</text>
  
  <!-- Section 5: Loss Functions -->
  <rect x="50" y="1040" width="550" height="220" fill="white" rx="15" filter="url(#dropshadow)" />
  <text x="70" y="1070" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="#2d3748">5. Loss Functions</text>
  
  <!-- MSE Visualization -->
  <g transform="translate(100, 1100)">
    <text x="100" y="15" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2d3748">Mean Squared Error</text>
    
    <!-- Error visualization -->
    <line x1="20" y1="100" x2="180" y2="100" stroke="#4a5568" stroke-width="2" />
    <line x1="20" y1="40" x2="20" y2="100" stroke="#4a5568" stroke-width="2" />
    
    <!-- Data points showing error -->
    <circle cx="60" cy="70" r="4" fill="#48bb78" />
    <circle cx="60" cy="85" r="4" fill="#e53e3e" />
    <line x1="60" y1="70" x2="60" y2="85" stroke="#e53e3e" stroke-width="2" stroke-dasharray="3,3" />
    
    <circle cx="100" cy="60" r="4" fill="#48bb78" />
    <circle cx="100" cy="80" r="4" fill="#e53e3e" />
    <line x1="100" y1="60" x2="100" y2="80" stroke="#e53e3e" stroke-width="2" stroke-dasharray="3,3" />
    
    <circle cx="140" cy="55" r="4" fill="#48bb78" />
    <circle cx="140" cy="90" r="4" fill="#e53e3e" />
    <line x1="140" y1="55" x2="140" y2="90" stroke="#e53e3e" stroke-width="2" stroke-dasharray="3,3" />
    
    <text x="100" y="130" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#4a5568">MSE = Σ(actual - predicted)²/n</text>
    <text x="100" y="145" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#4a5568">Green: Actual, Red: Predicted</text>
  </g>
  
  <!-- Loss function info -->
  <text x="350" y="1130" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">• MSE: Regression problems</text>
  <text x="350" y="1150" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">• Cross-Entropy: Classification</text>
  <text x="350" y="1170" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">• MAE: Robust to outliers</text>
  <text x="350" y="1190" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">• Guides weight updates</text>
  
  <!-- Section 6: Optimization -->
  <rect x="630" y="1040" width="520" height="220" fill="white" rx="15" filter="url(#dropshadow)" />
  <text x="650" y="1070" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="#2d3748">6. Optimization</text>
  
  <!-- Optimization landscape -->
  <g transform="translate(680, 1100)">
    <text x="150" y="15" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2d3748">Loss Landscape Navigation</text>
    
    <!-- Loss contours -->
    <ellipse cx="150" cy="80" rx="80" ry="40" fill="none" stroke="#a0aec0" stroke-width="2" />
    <ellipse cx="150" cy="80" rx="50" ry="25" fill="none" stroke="#a0aec0" stroke-width="2" />
    <ellipse cx="150" cy="80" rx="25" ry="12" fill="none" stroke="#a0aec0" stroke-width="2" />
    <circle cx="150" cy="80" r="3" fill="#e53e3e" />
    <text x="160" y="75" font-family="Arial, sans-serif" font-size="8" fill="#2d3748">Global Min</text>
    
    <!-- SGD path (zigzag) -->
    <path d="M 80 50 L 95 60 L 110 55 L 125 65 L 140 70 L 150 80" 
          stroke="#48bb78" stroke-width="2" fill="none" stroke-dasharray="4,4" />
    <text x="80" y="45" font-family="Arial, sans-serif" font-size="9" fill="#48bb78">SGD</text>
    
    <!-- Adam path (smoother) -->
    <path d="M 220 40 Q 190 50 170 65 Q 160 72 150 80" 
          stroke="#667eea" stroke-width="2" fill="none" />
    <text x="220" y="35" font-family="Arial, sans-serif" font-size="9" fill="#667eea">Adam</text>
  </g>
  
  <!-- Optimization algorithms -->
  <text x="650" y="1200" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">• SGD: Simple, can be noisy</text>
  <text x="650" y="1220" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">• Adam: Adaptive, fast convergence</text>
  <text x="650" y="1240" font-family="Arial, sans-serif" font-size="12" fill="#4a5568">• Learning rate controls step size</text>
  
  <!-- Section 7: Key Insights -->
  <rect x="50" y="1290" width="1100" height="120" fill="#f0fff4" rx="15" filter="url(#dropshadow)" stroke="#38a169" stroke-width="2" />
  <text x="70" y="1320" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="#2d3748">💡 Key Insights</text>
  
  <text x="80" y="1350" font-family="Arial, sans-serif" font-size="14" fill="#2d3748">• Neural networks learn through iterative weight adjustments based on error feedback</text>
  <text x="80" y="1375" font-family="Arial, sans-serif" font-size="14" fill="#2d3748">• Deep networks can learn hierarchical representations from simple to complex features</text>
  <text x="80" y="1400" font-family="Arial, sans-serif" font-size="14" fill="#2d3748">• The combination of non-linear activations and multiple layers enables universal approximation</text>
</svg>